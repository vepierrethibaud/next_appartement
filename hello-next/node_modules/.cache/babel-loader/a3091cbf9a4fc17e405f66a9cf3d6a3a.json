{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport React from \"react\";\nimport Layout from '../components/MyLayout.js';\nimport fetch from 'isomorphic-unfetch';\n{\n  props.data.acf.details_full;\n}\n\nvar Post = function Post(props) {\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, props.data.title.rendered), React.createElement(\"p\", null, props.data.acf.details_full), React.createElement(\"p\", null, \"$\", props.data.acf.price, \" per night\"), React.createElement(\"p\", null, new Array(_parseInt(props.data.acf.rating)).fill('⭐️️️️️')), React.createElement(\"img\", {\n    src: props.data.acf.image\n  }));\n};\n\nPost.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var id, res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = context.query.id;\n            _context.next = 3;\n            return fetch(\"http://apirl.xyz/wp-json/wp/v2/appartments/\".concat(id, \"?_fields=id,title,slug,acf\"));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            data = _context.sent;\n            console.log(\"Fetched show: \".concat(data.title.rendered));\n            return _context.abrupt(\"return\", {\n              data: data\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Post;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/ican/spe_dev/React/dm/dm_next_appart/next_appartement/hello-next/pages/post.js"],"names":["Layout","fetch","props","data","acf","details_full","Post","title","rendered","price","Array","rating","fill","image","getInitialProps","context","id","query","res","json","console","log"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA;AAACC,EAAAA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAeC,YAAf;AAA4B;;AAC7B,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAJ,KAAK;AAAA,SAChB,oBAAC,MAAD,QAEE,gCAAKA,KAAK,CAACC,IAAN,CAAWI,KAAX,CAAiBC,QAAtB,CAFF,EAGE,+BAAIN,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAeC,YAAnB,CAHF,EAIE,oCAAKH,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAeK,KAApB,eAJF,EAKE,+BAAI,IAAIC,KAAJ,CAAU,UAASR,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAeO,MAAxB,CAAV,EAA2CC,IAA3C,CAAgD,QAAhD,CAAJ,CALF,EAME;AAAK,IAAA,GAAG,EAAEV,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAeS;AAAzB,IANF,CADgB;AAAA,CAAlB;;AAYAP,IAAI,CAACQ,eAAL;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,YAAAA,EADa,GACND,OAAO,CAACE,KADF,CACbD,EADa;AAAA;AAAA,mBAEHf,KAAK,sDAA+Ce,EAA/C,gCAFF;;AAAA;AAEfE,YAAAA,GAFe;AAAA;AAAA,mBAGFA,GAAG,CAACC,IAAJ,EAHE;;AAAA;AAGfhB,YAAAA,IAHe;AAKrBiB,YAAAA,OAAO,CAACC,GAAR,yBAA6BlB,IAAI,CAACI,KAAL,CAAWC,QAAxC;AALqB,6CAOd;AAAEL,cAAAA,IAAI,EAAJA;AAAF,aAPc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAUA,eAAeG,IAAf","sourcesContent":["import Layout from '../components/MyLayout.js';\nimport fetch from 'isomorphic-unfetch';\n\n{props.data.acf.details_full}\nconst Post = props => (\n  <Layout>\n\n    <h1>{props.data.title.rendered}</h1>\n    <p>{props.data.acf.details_full}</p>\n    <p>${props.data.acf.price} per night</p>\n    <p>{new Array(parseInt(props.data.acf.rating)).fill('⭐️️️️️')}</p>\n    <img src={props.data.acf.image} />\n\n  </Layout>\n);\n\nPost.getInitialProps = async function(context) {\n  const { id } = context.query;\n  const res = await fetch(`http://apirl.xyz/wp-json/wp/v2/appartments/${id}?_fields=id,title,slug,acf`);\n  const data = await res.json();\n\n  console.log(`Fetched show: ${data.title.rendered}`);\n\n  return { data };\n};\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}